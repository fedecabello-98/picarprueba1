
package app;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author fedec
 */
public class MostrarTodosClientes extends javax.swing.JFrame {

    /** Creates new form MostrarTodosClientes */
    public MostrarTodosClientes() {
        initComponents();
        mostrarClientes();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Clientes | Mostrar todos");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(204, 255, 51));
        jLabel1.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TODOS LOS CLIENTES CARGADOS");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.setEditingColumn(0);
        jTable1.setEditingRow(0);
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 718, Short.MAX_VALUE)
                        .addComponent(jButton1))
                    .addComponent(jSeparator1)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 559, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Clientes mostrarlocalidades = new Clientes();
        this.dispose();
        mostrarlocalidades.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        mostrarlocalidades.setLocationRelativeTo(null);
        mostrarlocalidades.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    public class Logica {
        public DefaultTableModel mostrarClientes()
        {
            String [] nombresColumnas = {"Apellido","Nombre","N° de cliente","CUIL","Alias","Correo electrónico","Teléfono","Dirección","Categoría","Zona","Localidad","Provincia","Observaciones","Fecha de ingreso"};
            String [] registros = new String[14];
            DefaultTableModel modelo = new DefaultTableModel(null,nombresColumnas);
            String sql = "SELECT picar_db.clientes.apellido,picar_db.clientes.nombre,picar_db.clientes.idcliente,picar_db.clientes.cuil,picar_db.clientes.alias,picar_db.clientes.email,picar_db.clientes.telefono,picar_db.clientes.direccion,picar_db.categorias.categoria,picar_db.zonas.zona,picar_db.localidades.localidad,picar_db.provincias.provincia,picar_db.clientes.observaciones,picar_db.clientes.fechaingreso FROM picar_db.clientes JOIN picar_db.categorias ON picar_db.clientes.categoria_id=picar_db.categorias.idcategoria JOIN picar_db.zonas ON picar_db.clientes.zona_id=picar_db.zonas.idzonas JOIN picar_db.provincias ON picar_db.clientes.provincia_id=picar_db.provincias.idprovincias JOIN picar_db.localidades ON picar_db.clientes.localidad_id=picar_db.localidades.idlocalidades ORDER BY picar_db.clientes.apellido ASC;";
            Connection cn = null;
            PreparedStatement pst = null;
            ResultSet rs = null;
            try
            {
                cn = LlenarCombo.conexion;
                pst = cn.prepareStatement(sql);                        
                rs = pst.executeQuery();
                while(rs.next())
                {
                    registros[0] = rs.getString("apellido");
                    registros[1] = rs.getString("nombre");
                    registros[2] = rs.getString("idcliente");
                    registros[3] = rs.getString("cuil");
                    registros[4] = rs.getString("alias");
                    registros[5] = rs.getString("email");
                    registros[6] = rs.getString("telefono");
                    registros[7] = rs.getString("direccion");
                    registros[8] = rs.getString("categoria");
                    registros[9] = rs.getString("zona");
                    registros[10] = rs.getString("localidad");
                    registros[11] = rs.getString("provincia");
                    registros[12] = rs.getString("observaciones");
                    registros[13] = rs.getString("fechaingreso");
                    modelo.addRow(registros);
                }
            }
            catch(SQLException e)
            {
                System.out.println("ERROR: "+e);
                JOptionPane.showMessageDialog(null, "ERROR: "+e, "ERROR", JOptionPane.ERROR_MESSAGE);
            }
             return modelo;
        }
    }
    
    public void mostrarClientes()
    {
        Logica logica = new Logica();
        DefaultTableModel modelo = logica.mostrarClientes();
        jTable1.setModel(modelo);
    }
    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing
                                                                   .UIManager
                                                                   .getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing
                         .UIManager
                         .setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util
                .logging
                .Logger
                .getLogger(MostrarTodosClientes.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util
                .logging
                .Logger
                .getLogger(MostrarTodosClientes.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util
                .logging
                .Logger
                .getLogger(MostrarTodosClientes.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util
                .logging
                .Logger
                .getLogger(MostrarTodosClientes.class.getName())
                .log(java.util
                         .logging
                         .Level
                         .SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt
            .EventQueue
            .invokeLater(new Runnable() {
                public void run() {
                    new MostrarTodosClientes().setVisible(true);
                }
            });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

}
